version: 2.1

description: Delta Goodcheck reports

orbs:
  dscar: naokikimura/dscar@0.6.1

executors:
  default:
    description: Default Goodcheck execution environment
    parameters:
      docker-image:
        description: Specify the image used to execute Goodcheck
        type: string
        default: circleci/ruby:latest-node
      resource_class:
        description: Amount of CPU and RAM allocated to each container in a job.
        type: string
        default: small
    docker:
      - image: << parameters.docker-image >>
    resource_class: << parameters.resource_class >>

commands:
  analyze:
    description: Analyze code statically using Goodcheck
    parameters:
      starting-points:
        description: Specify the path of starting to search for files to analyze (Multiple paths can be specified by separating them with line feed)
        type: string
        default: "."
      no-analysis-output-timeout:
        description: Elapsed time the command can run without output. The string is a decimal with unit suffix, such as “20m”, “1.25h”, “5s”
        type: string
        default: 10m
      prepare:
        description: Specify the required steps before analysis if necessary
        type: steps
        default:
          - run: sudo gem install goodcheck
      redirecting-output:
        description: Specify "/dev/null" if you do not want to display the analysis results on the standard output
        type: enum
        enum: ["/dev/stdout", "/dev/stderr", "/dev/null"]
        default: "/dev/null"
    steps:
      - dscar/analyze:
          step-name: Analyze code statically using Goodcheck
          prepare:
            - run: sudo apt-get install jq
            - run:
                name: export TRANSFORMATION_ARGUMENTS
                command: |
                  set -x
                  cat \<<-EOT >> $BASH_ENV
                  export TRANSFORMATION_ARGUMENTS=(
                    -rM
                    'map(@html "<file name=\"\(.path)\"><error source=\"\(.rule_id)\" line=\"\(.location.start_line + 0)\" column=\"\(.location.start_column + 0)\" severity=\"\" message=\"\(.message)\" /></file>") | "<checkstyle>\(join(""))</checkstyle>"'
                  )
                  EOT
            - steps: << parameters.prepare >>
          analysis-command: goodcheck
          analysis-arguments: check --format=json
          transformation-command: jq
          starting-points: << parameters.starting-points >>
          no-output-timeout: << parameters.no-analysis-output-timeout >>
          redirecting-output: << parameters.redirecting-output >>
  execute:
    description: Calculate the difference of Goodcheck results between HEAD branch and BASE branch
    parameters:
      has-reconstructed:
        description: Specify true if `compare-url/reconstruct` has not been executed yet
        type: boolean
        default: false
      attach-compare-url-workspace:
        description: "Attach a workspace for this command to use? Useful when `compare-url` orb's `reconstruct` job is called upstream in a given workflow"
        type: boolean
        default: false
      analyze:
        description: Specify analysis steps
        type: steps
        default:
          - analyze:
              prepare: []
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      calculate:
        description: Specify the steps for calculating the difference
        type: steps
        default:
          - dscar/calculate
      project-path:
        description: "Absolute path to your project's base directory, necessary for running git commands (default: job’s working_directory)"
        type: string
        default: ""
    steps:
      - run: sudo gem install goodcheck
      - dscar/execute:
          has-reconstructed: << parameters.has-reconstructed >>
          attach-compare-url-workspace: << parameters.attach-compare-url-workspace >>
          analysis-name: Goodcheck
          analyze: << parameters.analyze >>
          analysis-results-path: << parameters.analysis-results-path >>
          calculate: << parameters.calculate >>
          project-path: << parameters.project-path >>

jobs:
  analyze:
    description: Analyze code statically using Goodcheck
    parameters:
      executor:
        description: Specify the image used to execute analysis
        type: executor
        default: default
      is-target-branch-base:
        description: Check-out the BASE branch if true is specified
        type: boolean
        default: false
      has-reconstructed:
        description: Specify true if `compare-url/reconstruct` has not been executed yet
        type: boolean
        default: false
      attach-compare-url-workspace:
        description: "Attach a workspace for this command to use? Useful when `compare-url` orb's `reconstruct` job is called upstream in a given workflow"
        type: boolean
        default: false
      analyze:
        description: Specify analysis steps
        type: steps
        default:
          - analyze
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    executor: << parameters.executor >>
    steps:
      - dscar/set-result-path:
          analysis-name: Goodcheck
          analysis-results-path: << parameters.analysis-results-path >>
          is-target-branch-base: << parameters.is-target-branch-base >>
      - dscar/checkout-analysis-target:
          is-target-branch-base: << parameters.is-target-branch-base >>
          has-reconstructed: << parameters.has-reconstructed >>
          attach-compare-url-workspace: << parameters.attach-compare-url-workspace >>
      - steps: << parameters.analyze >>
      - when:
          condition: << parameters.test-results-path >>
          steps:
            - dscar/transform:
                analysis-name: Goodcheck
                analysis-results-path: << parameters.analysis-results-path >>
                test-results-path: << parameters.test-results-path >>
            - store_test_results:
                path: << parameters.test-results-path >>
  calculate:
    description: |
      Calculate the difference between the analysis results

      Use the [checkstyle-reports-combiner][1] command to calculate the difference

      [1]: https://www.npmjs.com/package/junit-reports-combiner
    parameters:
      executor:
        description: Specify the image used to execute analysis
        type: executor
        default: default
      calculate:
        description: Specify the steps for calculating the difference
        type: steps
        default:
          - dscar/calculate
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    executor: << parameters.executor >>
    steps:
      - dscar/set-analysis-result-paths:
          analysis-name: Goodcheck
          analysis-results-path: << parameters.analysis-results-path >>
      - steps: << parameters.calculate >>
      - dscar/transform:
          analysis-name: Goodcheck
          analysis-results-path: << parameters.analysis-results-path >>
          test-results-path: << parameters.test-results-path >>
          pattern: '.*/DELTA-analysis-results\.xml$'
      - store_test_results:
          path: << parameters.test-results-path >>
  execute:
    description: Calculate the difference of Goodcheck results between HEAD branch and BASE branch
    parameters:
      executor:
        description: Specify the image used to execute analysis
        type: executor
        default: default
      has-reconstructed:
        description: Specify true if `compare-url/reconstruct` has not been executed yet
        type: boolean
        default: false
      attach-compare-url-workspace:
        description: "Attach a workspace for this command to use? Useful when `compare-url` orb's `reconstruct` job is called upstream in a given workflow"
        type: boolean
        default: false
      analyze:
        description: Specify analysis steps
        type: steps
        default:
          - analyze:
              prepare: []
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      calculate:
        description: Specify the steps for calculating the difference
        type: steps
        default:
          - dscar/calculate
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    executor: << parameters.executor >>
    steps:
      - execute:
          has-reconstructed: << parameters.has-reconstructed >>
          attach-compare-url-workspace: << parameters.attach-compare-url-workspace >>
          analyze: << parameters.analyze >>
          analysis-results-path: << parameters.analysis-results-path >>
          calculate: << parameters.calculate >>
      - dscar/transform:
          analysis-name: Goodcheck
          analysis-results-path: << parameters.analysis-results-path >>
          test-results-path: << parameters.test-results-path >>
          pattern: '.*/DELTA-analysis-results\.xml$'
      - store_test_results:
          path: << parameters.test-results-path >>
